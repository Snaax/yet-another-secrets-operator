apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yet-another-secrets-operator.fullname" . }}
  namespace: {{ include "yet-another-secrets-operator.namespace" . }}
  labels:
    {{- include "yet-another-secrets-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "yet-another-secrets-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "yet-another-secrets-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: another-secrets-operator
    spec:
      serviceAccountName: {{ include "yet-another-secrets-operator.serviceAccountName" . }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: another-secrets-operator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            - --health-probe-bind-address=:{{ .Values.ports.healthProbe }}
            - --metrics-bind-address=:{{ .Values.ports.metrics }}
            {{- if .Values.aws.region }}
            - --aws-region={{ .Values.aws.region }}
            {{- end }}
            {{- if .Values.aws.kms.keyId }}
            - --aws-default-kms-key-id={{ .Values.aws.kms.keyId }}
            {{- else if .Values.aws.kms.configMap.name }}
            {{- $configMap := lookup "v1" "ConfigMap" .Values.aws.kms.configMap.namespace .Values.aws.kms.configMap.name }}
            {{- if $configMap }}
            - --aws-default-kms-key-id={{ index $configMap.data .Values.aws.kms.configMap.key }}
            {{- else }}
            {{- fail (printf "ConfigMap '%s/%s' not found" $namespace .Values.aws.kms.configMap.name) }}
            {{- end }}
            {{- end }}
            - --remove-remote-keys={{ .Values.aws.removeRemoteKeys }}
            {{- if .Values.leaderElection.enabled }}
            - --leader-elect=true
            {{- end }}
            {{- if .Values.logger.debug }}
            - --debug={{ .Values.logger.debug }}
            {{- end }}
          env:
            {{- if .Values.aws.region }}
            - name: AWS_REGION
              value: {{ .Values.aws.region }}
            {{- end }}
            {{- if .Values.aws.tags }}
            {{- range $key, $value := .Values.aws.tags }}
            - name: AWS_TAG_{{ $key | upper }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.ports.healthProbe }}
            initialDelaySeconds: {{ .Values.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.ports.healthProbe }}
            initialDelaySeconds: {{ .Values.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.readiness.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
